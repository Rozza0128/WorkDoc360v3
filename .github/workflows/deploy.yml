name: 🚀 Build & Deploy WorkDoc360 (Dev + Prod)

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install dependencies (root + infra)
        run: |
          npm ci
          cd infra
          npm ci

      - name: 🏗️ Build project
        run: npm run build

      # ======================
      # Configure AWS per environment
      # ======================
      - name: 🔐 Configure AWS credentials (Dev or Prod)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ github.ref == 'refs/heads/main' && secrets.AWS_ROLE_ARN_PROD || secrets.AWS_ROLE_ARN_DEV }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ======================
      # Deploy with AWS CDK
      # ======================
      - name: 🚀 Deploy with AWS CDK
        run: |
          npm install -g aws-cdk
          cd infra
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "🚀 Deploying PRODUCTION stack..."
            npx cdk deploy ${{ secrets.CDK_STACK_NAME_PROD }} --require-approval never
          else
            echo "🧪 Deploying DEVELOPMENT stack..."
            npx cdk deploy ${{ secrets.CDK_STACK_NAME_DEV }} --require-approval never
          fi

      # ======================
      # CloudFront cache invalidation
      # ======================
      - name: 🔄 Invalidate CloudFront cache
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }} --paths "/*"
          else
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }} --paths "/*"
          fi
