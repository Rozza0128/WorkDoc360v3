import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { 
  FileText, 
  Download, 
  Eye, 
  Clock, 
  Loader2,
  Crown,
  Shield,
  AlertTriangle,
  ArrowRight
} from "lucide-react";
import { apiRequest } from "@/lib/queryClient";

interface DemoDocumentViewerProps {
  companyName: string;
  tradeType: string;
}

export function DemoDocumentViewer({ companyName, tradeType }: DemoDocumentViewerProps) {
  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);
  const [generatedDocument, setGeneratedDocument] = useState<any>(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [showDocument, setShowDocument] = useState(false);

  // Copy protection - disable keyboard shortcuts and developer tools
  useEffect(() => {
    if (showDocument) {
      const handleKeyDown = (e: KeyboardEvent) => {
        // Disable Ctrl+A, Ctrl+C, Ctrl+V, Ctrl+S, Ctrl+P, F12
        if (e.ctrlKey && ['a', 'c', 'v', 's', 'p'].includes(e.key.toLowerCase())) {
          e.preventDefault();
          e.stopPropagation();
        }
        // Disable F12 (developer tools)
        if (e.key === 'F12') {
          e.preventDefault();
        }
        // Disable right-click context menu shortcut
        if (e.key === 'ContextMenu') {
          e.preventDefault();
        }
      };

      document.addEventListener('keydown', handleKeyDown);
      return () => document.removeEventListener('keydown', handleKeyDown);
    }
  }, [showDocument]);

  const templates = [
    {
      id: "risk_assessment",
      name: "Risk Assessment (RAMS)",
      description: "Comprehensive risk analysis and mitigation strategies",
      icon: Shield,
      popular: true
    },
    {
      id: "method_statement", 
      name: "Method Statement",
      description: "Step-by-step work procedure documentation",
      icon: FileText,
      popular: false
    },
    {
      id: "toolbox_talk",
      name: "Toolbox Talk", 
      description: "Safety briefing and awareness session",
      icon: AlertTriangle,
      popular: false
    }
  ];

  const handleGenerateDocument = async (templateType: string) => {
    setIsGenerating(true);
    setSelectedTemplate(templateType);
    
    try {
      const response = await apiRequest("POST", "/api/demo/generate-document", {
        templateType,
        companyName,
        tradeType
      });
      
      const document = await response.json();
      setGeneratedDocument(document);
      setShowDocument(true);
    } catch (error) {
      console.error("Failed to generate demo document:", error);
    } finally {
      setIsGenerating(false);
    }
  };

  if (showDocument && generatedDocument) {
    return (
      <Card className="border-2 border-dashed border-construction-orange bg-gradient-to-br from-orange-50 to-amber-50">
        <CardHeader className="bg-construction-orange text-white">
          <div className="flex items-center justify-between">
            <div>
              <CardTitle className="flex items-center text-white">
                <FileText className="mr-2 h-5 w-5" />
                {generatedDocument.title}
              </CardTitle>
              <div className="flex items-center mt-2">
                <Badge variant="secondary" className="bg-white/20 text-white border-0">
                  DEMO DOCUMENT
                </Badge>
                <span className="ml-3 text-white/90 text-sm">
                  Generated for {companyName}
                </span>
              </div>
            </div>
            <div className="flex space-x-2">
              <Button 
                variant="ghost" 
                size="sm" 
                className="text-white hover:bg-white/20"
                onClick={() => setShowDocument(false)}
              >
                Back to Templates
              </Button>
            </div>
          </div>
        </CardHeader>
        <CardContent className="p-6">
          {/* Document Summary */}
          <div className="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <h4 className="font-semibold text-blue-900 mb-2">Document Summary</h4>
            <p className="text-blue-800 text-sm">{generatedDocument.summary}</p>
          </div>

          {/* Demo Watermark Warning */}
          <div className="mb-6 p-4 bg-amber-50 border border-amber-300 rounded-lg">
            <div className="flex items-center">
              <Crown className="h-5 w-5 text-amber-600 mr-2" />
              <h4 className="font-semibold text-amber-900">This is a Demo Document</h4>
            </div>
            <p className="text-amber-800 text-sm mt-1">
              This document was generated by our AI for demonstration purposes. 
              To generate, save, and download real documents, <strong>subscribe to WorkDoc360</strong>.
            </p>
          </div>

          {/* Professional Document Content with Copy Protection */}
          <div 
            className="bg-white border rounded-lg overflow-hidden select-none"
            style={{
              userSelect: 'none',
              WebkitUserSelect: 'none',
              MozUserSelect: 'none',
              msUserSelect: 'none'
            }}
            onContextMenu={(e) => e.preventDefault()}
            onDragStart={(e) => e.preventDefault()}
          >
            {/* Document Header */}
            <div className="bg-construction-orange text-white p-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-xl font-bold">WorkDoc360</h3>
                  <p className="text-orange-100">Professional Construction Compliance Documents</p>
                </div>
                <div className="text-right text-orange-100">
                  <p className="text-sm">Generated: {new Date().toLocaleDateString('en-GB')}</p>
                  <p className="text-sm">Document ID: WD360-{Math.random().toString(36).substr(2, 8).toUpperCase()}</p>
                </div>
              </div>
            </div>

            {/* Document Body */}
            <div className="p-8">
              {/* Company Header */}
              <div className="border-b border-gray-200 pb-6 mb-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-2xl font-bold text-charcoal">{companyName}</h2>
                    <p className="text-steel-gray">Scaffolding Specialists • Manchester • M1 4AE</p>
                  </div>
                  <div className="text-right">
                    <div className="inline-flex items-center px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium">
                      ✓ UK Compliant
                    </div>
                  </div>
                </div>
              </div>

              {/* Document Content with Professional Typography - Copy Protected */}
              <div className="prose prose-lg max-w-none select-none"
                   style={{ userSelect: 'none', WebkitUserSelect: 'none' }}>
                <div className="whitespace-pre-wrap leading-relaxed text-charcoal font-serif text-base select-none">
                  {generatedDocument.content.split('\n').map((line: string, index: number) => {
                    // Clean up markdown formatting
                    let cleanLine = line
                      .replace(/\*\*(.*?)\*\*/g, '$1') // Remove ** bold markers
                      .replace(/\*(.*?)\*/g, '$1')     // Remove * italic markers
                      .replace(/`(.*?)`/g, '$1')       // Remove ` code markers
                      .replace(/#{1,6}\s*/g, '');      // Remove # heading markers
                    
                    // Enhanced formatting for different content types
                    if (line.trim().startsWith('###') || cleanLine.includes('SECTION') || cleanLine.includes('ASSESSMENT')) {
                      return (
                        <h3 key={index} className="text-xl font-bold text-construction-orange mt-6 mb-3 border-b border-construction-orange/20 pb-2">
                          {cleanLine}
                        </h3>
                      );
                    }
                    if (line.trim().startsWith('##') || cleanLine.includes('HAZARD') || cleanLine.includes('CONTROL')) {
                      return (
                        <h4 key={index} className="text-lg font-semibold text-charcoal mt-4 mb-2">
                          {cleanLine}
                        </h4>
                      );
                    }
                    if (line.trim().startsWith('-') || line.trim().startsWith('•')) {
                      return (
                        <li key={index} className="ml-6 mb-1 text-steel-gray">
                          {cleanLine.replace(/^[-•]\s*/, '')}
                        </li>
                      );
                    }
                    if (cleanLine.trim() === '') {
                      return <br key={index} />;
                    }
                    
                    // Detect and style key sections
                    if (cleanLine.toUpperCase().includes('RISK LEVEL') || cleanLine.toUpperCase().includes('PROBABILITY')) {
                      return (
                        <div key={index} className="mb-3 p-3 bg-orange-50 border-l-4 border-construction-orange rounded">
                          <p className="text-charcoal font-medium">{cleanLine}</p>
                        </div>
                      );
                    }
                    
                    return (
                      <p key={index} className="mb-3 text-charcoal leading-relaxed">
                        {cleanLine}
                      </p>
                    );
                  })}
                </div>
              </div>

              {/* Document Footer */}
              <div className="mt-8 pt-6 border-t border-gray-200">
                <div className="grid md:grid-cols-2 gap-6 text-sm text-steel-gray">
                  <div>
                    <h4 className="font-semibold text-charcoal mb-2">Document Information</h4>
                    <p>Generated by: WorkDoc360 AI</p>
                    <p>Template: {selectedTemplate?.replace('_', ' ')}</p>
                    <p>Version: 1.0</p>
                  </div>
                  <div>
                    <h4 className="font-semibold text-charcoal mb-2">Compliance Notes</h4>
                    <p>✓ HSE Guidelines Compliant</p>
                    <p>✓ CDM 2015 Regulations</p>
                    <p>✓ UK Construction Standards</p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Professional Action Buttons */}
          <div className="mt-6 grid md:grid-cols-4 gap-3">
            <Button 
              disabled
              className="bg-red-600 hover:bg-red-700 text-white disabled:bg-gray-300 disabled:text-gray-500"
            >
              <Download className="mr-2 h-4 w-4" />
              Download PDF
            </Button>
            <Button 
              disabled
              variant="outline"
              className="border-blue-600 text-blue-600 disabled:border-gray-300 disabled:text-gray-500"
            >
              <FileText className="mr-2 h-4 w-4" />
              Download Word
            </Button>
            <Button 
              disabled
              variant="outline"
              className="border-green-600 text-green-600 disabled:border-gray-300 disabled:text-gray-500"
            >
              <FileText className="mr-2 h-4 w-4" />
              Save to Library
            </Button>
            <Button 
              disabled
              variant="outline"
              className="border-purple-600 text-purple-600 disabled:border-gray-300 disabled:text-gray-500"
            >
              <FileText className="mr-2 h-4 w-4" />
              Email Document
            </Button>
          </div>

          {/* Feature Callout */}
          <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <h4 className="font-semibold text-blue-900 mb-2">✨ Available with Subscription</h4>
            <div className="grid md:grid-cols-2 gap-4 text-sm text-blue-800">
              <div>
                <p>• <strong>PDF Downloads:</strong> Professional layouts with company branding</p>
                <p>• <strong>Word Documents:</strong> Editable .docx files for customization</p>
              </div>
              <div>
                <p>• <strong>Library Storage:</strong> Organize and search all documents</p>
                <p>• <strong>Email Distribution:</strong> Send directly to team members</p>
              </div>
            </div>
          </div>

          {/* Subscription Prompt */}
          <div className="mt-6 p-4 bg-gradient-to-r from-construction-orange to-orange-600 text-white rounded-lg">
            <h4 className="font-semibold mb-2">Ready to Generate Real Documents?</h4>
            <p className="text-sm mb-3 opacity-90">
              Unlock unlimited AI document generation, project management, and compliance tracking.
            </p>
            <Button 
              className="bg-white text-construction-orange hover:bg-gray-100"
              onClick={() => window.location.href = '/auth'}
            >
              Subscribe Now - From £35/month
            </Button>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <div className="space-y-6">
      {/* Template Selection */}
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-charcoal mb-4">Choose a Document Template</h3>
        <div className="grid md:grid-cols-3 gap-4">
          {templates.map((template) => {
            const Icon = template.icon;
            const isCurrentTemplateGenerating = isGenerating && selectedTemplate === template.id;
            
            return (
              <Card 
                key={template.id}
                className={`cursor-pointer transition-all duration-200 hover:shadow-lg hover:border-construction-orange ${
                  template.popular ? 'border-2 border-purple-200 bg-purple-50' : 'border border-gray-200'
                }`}
                onClick={() => !isGenerating && handleGenerateDocument(template.id)}
              >
                <CardContent className="p-6 text-center">
                  {template.popular && (
                    <Badge className="mb-3 bg-purple-600 text-white">Most Popular</Badge>
                  )}
                  <Icon className="h-12 w-12 mx-auto mb-4 text-construction-orange" />
                  <h4 className="font-semibold text-charcoal mb-2">{template.name}</h4>
                  <p className="text-sm text-steel-gray mb-4">{template.description}</p>
                  
                  <Button 
                    className="w-full bg-construction-orange hover:bg-orange-600"
                    disabled={isCurrentTemplateGenerating}
                  >
                    {isCurrentTemplateGenerating ? (
                      <>
                        <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                        Generating...
                      </>
                    ) : (
                      <>
                        <Eye className="mr-2 h-4 w-4" />
                        Generate Demo
                      </>
                    )}
                  </Button>
                </CardContent>
              </Card>
            );
          })}
        </div>
      </div>

      {/* Generation Timer - Shown during generation */}
      {isGenerating && (
        <Card className="border-construction-orange bg-orange-50">
          <CardContent className="p-6 text-center">
            <div className="flex items-center justify-center mb-4">
              <Loader2 className="h-8 w-8 animate-spin text-construction-orange mr-3" />
              <div>
                <h4 className="text-lg font-semibold text-charcoal">AI Generating Your Document</h4>
                <p className="text-steel-gray">Creating professional {selectedTemplate?.replace('_', ' ')} in real-time...</p>
              </div>
            </div>
            <div className="flex items-center justify-center text-sm text-steel-gray">
              <Clock className="h-4 w-4 mr-1" />
              Usually takes 20-30 seconds
            </div>
          </CardContent>
        </Card>
      )}

      {/* Demo Info */}
      <Card className="bg-blue-50 border-blue-200">
        <CardContent className="p-6">
          <h4 className="font-semibold text-blue-900 mb-2">🤖 Real AI Document Generation</h4>
          <p className="text-blue-800 text-sm mb-3">
            This demo uses our actual AI engine to generate real construction compliance documents. 
            See the quality and accuracy of our AI-powered document creation for {companyName}.
          </p>
          <div className="text-xs text-blue-700 bg-blue-100 p-2 rounded">
            <strong>Note:</strong> Documents are watermarked for demo purposes. 
            Subscribers get clean, professional documents ready for use on-site.
          </div>
        </CardContent>
      </Card>
    </div>
  );
}